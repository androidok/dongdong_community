package com.dongdong.app.db.gen;

import java.util.Map;

import org.greenrobot.greendao.AbstractDao;
import org.greenrobot.greendao.AbstractDaoSession;
import org.greenrobot.greendao.database.Database;
import org.greenrobot.greendao.identityscope.IdentityScopeType;
import org.greenrobot.greendao.internal.DaoConfig;

import com.dongdong.app.bean.OpenDoorRecordBean;
import com.dongdong.app.bean.UserBean;
import com.dongdong.app.bean.VisitorPhotoBean;

import com.dongdong.app.db.gen.OpenDoorRecordBeanDao;
import com.dongdong.app.db.gen.UserBeanDao;
import com.dongdong.app.db.gen.VisitorPhotoBeanDao;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.

/**
 * {@inheritDoc}
 * 
 * @see org.greenrobot.greendao.AbstractDaoSession
 */
public class DaoSession extends AbstractDaoSession {

    private final DaoConfig openDoorRecordBeanDaoConfig;
    private final DaoConfig userBeanDaoConfig;
    private final DaoConfig visitorPhotoBeanDaoConfig;

    private final OpenDoorRecordBeanDao openDoorRecordBeanDao;
    private final UserBeanDao userBeanDao;
    private final VisitorPhotoBeanDao visitorPhotoBeanDao;

    public DaoSession(Database db, IdentityScopeType type, Map<Class<? extends AbstractDao<?, ?>>, DaoConfig>
            daoConfigMap) {
        super(db);

        openDoorRecordBeanDaoConfig = daoConfigMap.get(OpenDoorRecordBeanDao.class).clone();
        openDoorRecordBeanDaoConfig.initIdentityScope(type);

        userBeanDaoConfig = daoConfigMap.get(UserBeanDao.class).clone();
        userBeanDaoConfig.initIdentityScope(type);

        visitorPhotoBeanDaoConfig = daoConfigMap.get(VisitorPhotoBeanDao.class).clone();
        visitorPhotoBeanDaoConfig.initIdentityScope(type);

        openDoorRecordBeanDao = new OpenDoorRecordBeanDao(openDoorRecordBeanDaoConfig, this);
        userBeanDao = new UserBeanDao(userBeanDaoConfig, this);
        visitorPhotoBeanDao = new VisitorPhotoBeanDao(visitorPhotoBeanDaoConfig, this);

        registerDao(OpenDoorRecordBean.class, openDoorRecordBeanDao);
        registerDao(UserBean.class, userBeanDao);
        registerDao(VisitorPhotoBean.class, visitorPhotoBeanDao);
    }
    
    public void clear() {
        openDoorRecordBeanDaoConfig.clearIdentityScope();
        userBeanDaoConfig.clearIdentityScope();
        visitorPhotoBeanDaoConfig.clearIdentityScope();
    }

    public OpenDoorRecordBeanDao getOpenDoorRecordBeanDao() {
        return openDoorRecordBeanDao;
    }

    public UserBeanDao getUserBeanDao() {
        return userBeanDao;
    }

    public VisitorPhotoBeanDao getVisitorPhotoBeanDao() {
        return visitorPhotoBeanDao;
    }

}
